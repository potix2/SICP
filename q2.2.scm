(define (make-segment start-point end-point)
	(cons start-point end-point))
(define (start-segment segment)
	(car segment))
(define (end-segment segment)
	(cdr segment))
(define (make-point x y)
	(cons x y))
(define (x-point point)
	(car point))
(define (y-point point)
	(cdr point))
(define (print-point p)
	(newline)
	(display "(")
	(display (x-point p))
	(display ",")
	(display (y-point p))
	(display ")"))
(define (midpoint-segment s)
	(make-point
		(/ (+ (x-point (start-segment s)) (x-point (end-segment s))) 2)
		(/ (+ (y-point (start-segment s)) (y-point (end-segment s))) 2)))

(define origin (make-point 0 0))
(define one-one (make-point 1 1))
(define one-one-segment (make-segment origin one-one))
(define (midpoint-segment-test)
	(let ((mp (midpoint-segment one-one-segment)))
		(and
			(= (x-point mp) 0.5)
			(= (y-point mp) 0.5))))
(display (midpoint-segment-test))
(print-point (midpoint-segment one-one-segment))
