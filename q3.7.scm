(define (make-account balance password)
	(define (withdraw amount)
		(if (>= balance amount)
			(begin (set! balance (- balance amount))
					balance)
			"Insufficient funds"))
	(define (deposit amount)
		(set! balance (+ balance amount))
		balance)
	(define (dispatch p m)
		(if (eq? p password)
			(cond ((eq? m 'withdraw) withdraw)
				  ((eq? m 'deposit) deposit)
				  ((eq? m 'match-password) #t)
				  (else (error "Unknown request -- MAKE-ACCOUNT"
				  				m)))
			(error "Incorrect password")))
	dispatch)
(define (make-joint acc current-pass new-pass)
	(lambda (p m)
		(if (acc current-pass 'match-password)
			(if (eq? p new-pass)
				(acc current-pass m)
				(error "Incorrect password")))
			(error "Incorrect account password")))
(define peter-acc (make-account 100 'open-sesame))
(define paul-acc
	(make-joint peter-acc 'open-sesame 'rosebud))
(display ((paul-acc 'rosebud 'withdraw) 20))
(newline)
(display ((peter-acc 'open-sesame 'withdraw) 20))
(define paul-acc-fail
	(make-joint peter-acc 'foo 'bar)) 
