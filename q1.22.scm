(load "./divisor.scm")
(load "./runtime.scm")
(define (timed-prime-test n)
	(newline)
	(display n)
	(start-prime-test n (runtime))
)
(define (start-prime-test n start-time)
	(and (prime? n)
		(report-prime (- (runtime) start-time))
	)
)
(define (report-prime elapsed-time)
	(display " *** ")
	(display elapsed-time)
	#t)
(define (search-for-primes start n)
	(define (search-inner counter rest)
		(if (= rest 0)
			#t
			(if (timed-prime-test counter)
				(search-inner (+ counter 1) (- rest 1))
				(search-inner (+ counter 1) rest))))
	(search-inner start n))

; main
(search-for-primes 1000 3)
(search-for-primes 10000 3)
(search-for-primes 100000 3)
(search-for-primes 1000000 3)
