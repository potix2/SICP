(define (A x y)
	(cond ((= y 0) 0)
		((= x 0) (* 2 y))
		((= y 1) 2)
		(else (A (- x 1)
			(A x (- y 1)))
		)
	)
)
(define (f n) (A 0 n))
(define (g n) (A 1 n))
(define (h n) (A 2 n))
(define (k n) (* 5 n n))

(define (test func n)
	(cond ((> n 0) (print (func n)) (test func (- n 1)))
		(else (print (func n)))
	)
)

(print "f 10 -> f 0")
(test f 10)
(print "g 10 -> g 0")
(test g 10)
#(print "h 10 -> h 0")
#(test h 10)
