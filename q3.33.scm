(load "./constraint.scm")
(define (average a b c)
	(let ((u (make-connector))
				(v (make-connector)))
		(adder a b u)
		(multiplier u v c)
		(constant 0.5 v)
	'ok))

(define A (make-connector))
(define B (make-connector))
(define C (make-connector))
(average A B C)
(probe "Input A: " A)
(probe "Input B: " B)
(probe "Result C: " C)

(set-value! A 10 'user)
(set-value! B 20 'user)
(newline)
(forget-value! B 'user)
(set-value! C 100 'user)
