(load "./q2.68.scm")
(define (generate-huffman-tree pairs)
	(successive-merge (make-leaf-set pairs)))
(define (successive-merge pairs)
	(if (= (length pairs) 1)
		(car pairs)
		(let ((min1 (car pairs))
			  (min2 (cadr pairs)))
			(successive-merge (adjoin-set (make-code-tree min1 min2) (cddr pairs))))))
;(display (generate-huffman-tree '((A 4) (B 2) (C 1) (D 1))))
