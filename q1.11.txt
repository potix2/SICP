# 再帰的プロセス
(define (f n)
	(cond ((< n 3) n)
		(else (+ (f (- n 1)) (* 2 (f (- n 2))) (* 3 (f (- n 3))))
		)
	)
)

# 反復的プロセス
f(n)	=   		      f(n - 1) + 2f(n - 2) + 3f(n - 3)
f(n + 1)= 	      f(n) + 2f(n - 1) + 3f(n - 2)
f(n + 2)= f(n + 1) + 2f(n) + 3f(n - 1)

(define (f n)
	(define (f-iter a b c count)
		(if (< count 3) a
			(f-iter (+ a (* 2 b) (* 3 c)) a b (- count 1))
		)
	)
	(f-iter 2 1 0 n)
)
